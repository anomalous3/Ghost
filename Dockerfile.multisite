# Multi-Site Ghost with libSQL
FROM node:18-alpine

# Install system dependencies for better performance
RUN apk add --no-cache \
    python3 \
    make \
    g++ \
    sqlite \
    curl \
    && rm -rf /var/cache/apk/*

# Set working directory
WORKDIR /var/lib/ghost

# Install libSQL server (sqld) - detect architecture
RUN ARCH=$(uname -m) \
    && if [ "$ARCH" = "aarch64" ] || [ "$ARCH" = "arm64" ]; then \
        SQLD_ARCH="aarch64-unknown-linux-gnu"; \
    else \
        SQLD_ARCH="x86_64-unknown-linux-gnu"; \
    fi \
    && echo "Installing libSQL server for architecture: $SQLD_ARCH" \
    && curl -L "https://github.com/tursodatabase/libsql/releases/download/libsql-server-v0.24.32/libsql-server-${SQLD_ARCH}.tar.xz" \
        -o libsql-server.tar.xz \
    && tar -xf libsql-server.tar.xz \
    && mv libsql-server-${SQLD_ARCH}/sqld /usr/local/bin/ \
    && chmod +x /usr/local/bin/sqld \
    && rm -rf libsql-server.tar.xz libsql-server-${SQLD_ARCH} \
    && sqld --version

# Copy Ghost application
COPY . .

# Install dependencies (use the existing Ghost setup)
WORKDIR /var/lib/ghost/ghost/core
RUN npm ci --only=production

# Create necessary directories
RUN mkdir -p /var/lib/ghost/content/data \
    && mkdir -p /var/lib/ghost/content/logs \
    && mkdir -p /var/lib/ghost/content/public \
    && mkdir -p /var/lib/ghost/content/files

# Copy our multi-site configuration
COPY docker/multisite-config.js /var/lib/ghost/ghost/core/config.production.json

# Create startup script for co-located services
COPY docker/start-multisite.sh /usr/local/bin/start-multisite.sh
RUN chmod +x /usr/local/bin/start-multisite.sh

# Expose ports
EXPOSE 2368 8080-8089

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=30s --retries=3 \
    CMD curl -f http://localhost:2368/ || exit 1

# Use our startup script
CMD ["/usr/local/bin/start-multisite.sh"]